[gd_resource type="VisualShader" load_steps=14 format=3 uid="uid://dtsb2fhmg5nsj"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_oh004"]
parameter_name = "DissolverTex"
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_oh004"]
expanded_output_ports = [0]
source = 5

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_oh004"]
function = 1

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_7hhyo"]
parameter_name = "Vector2Parameter"
default_value_enabled = true
default_value = Vector2(1, 1)

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_oh004"]
parameter_name = "AlphaThreshold"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_oh004"]
expanded_output_ports = [0]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_7hhyo"]
input_name = "light"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_82v1i"]
input_name = "normal"

[sub_resource type="VisualShaderNodeDotProduct" id="VisualShaderNodeDotProduct_rarhr"]

[sub_resource type="VisualShaderNodeRemap" id="VisualShaderNodeRemap_mrnv5"]
default_input_values = [1, -1.0, 2, 1.0, 3, 0.0, 4, 1.0]

[sub_resource type="Gradient" id="Gradient_oh004"]
interpolation_mode = 1
offsets = PackedFloat32Array(0, 0.422713)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_7hhyo"]
gradient = SubResource("Gradient_oh004")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_82v1i"]
texture = SubResource("GradientTexture1D_7hhyo")

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_disabled, diffuse_toon, specular_toon;

uniform vec2 Vector2Parameter = vec2(1.000000, 1.000000);
uniform sampler2D DissolverTex : source_color;
uniform sampler2D tex_lgt_6;



void fragment() {
// Input:7
	vec4 n_out7p0 = COLOR;
	float n_out7p4 = n_out7p0.a;


// Vector2Parameter:5
	vec2 n_out5p0 = Vector2Parameter;


// UVFunc:4
	vec2 n_in4p2 = vec2(0.00000, 0.00000);
	vec2 n_out4p0 = (UV - n_in4p2) * n_out5p0 + n_in4p2;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(DissolverTex, n_out4p0);
	float n_out3p1 = n_out3p0.r;


// Output:0
	ALBEDO = vec3(n_out7p0.xyz);
	ALPHA = n_out3p1;
	ALPHA_SCISSOR_THRESHOLD = n_out7p4;


}

void light() {
// Input:2
	vec3 n_out2p0 = LIGHT;


// Input:3
	vec3 n_out3p0 = NORMAL;


// DotProduct:4
	float n_out4p0 = dot(n_out2p0, n_out3p0);


	float n_out5p0;
// Remap:5
	float n_in5p1 = -1.00000;
	float n_in5p2 = 1.00000;
	float n_in5p3 = 0.00000;
	float n_in5p4 = 1.00000;
	{
		float __input_range = n_in5p2 - n_in5p1;
		float __output_range = n_in5p4 - n_in5p3;
		n_out5p0 = n_in5p3 + __output_range * ((n_out4p0 - n_in5p1) / __input_range);
	}


// Texture2D:6
	vec4 n_out6p0 = texture(tex_lgt_6, vec2(n_out5p0));


// Output:0
	DIFFUSE_LIGHT = vec3(n_out6p0.xyz);


}
"
graph_offset = Vector2(-557.258, -211.236)
modes/cull = 2
modes/diffuse = 3
modes/specular = 1
nodes/fragment/0/position = Vector2(500, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_oh004")
nodes/fragment/2/position = Vector2(-320, 260)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_oh004")
nodes/fragment/3/position = Vector2(60, 160)
nodes/fragment/4/node = SubResource("VisualShaderNodeUVFunc_oh004")
nodes/fragment/4/position = Vector2(-220, 40)
nodes/fragment/5/node = SubResource("VisualShaderNodeVec2Parameter_7hhyo")
nodes/fragment/5/position = Vector2(-520, -40)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatParameter_oh004")
nodes/fragment/6/position = Vector2(-460, 840)
nodes/fragment/7/node = SubResource("VisualShaderNodeInput_oh004")
nodes/fragment/7/position = Vector2(-60, 840)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 3, 1, 0, 1, 4, 0, 3, 0, 5, 0, 4, 1, 7, 4, 0, 19, 7, 0, 0, 0)
nodes/light/0/position = Vector2(820, 140)
nodes/light/2/node = SubResource("VisualShaderNodeInput_7hhyo")
nodes/light/2/position = Vector2(-220, -40)
nodes/light/3/node = SubResource("VisualShaderNodeInput_82v1i")
nodes/light/3/position = Vector2(-220, 100)
nodes/light/4/node = SubResource("VisualShaderNodeDotProduct_rarhr")
nodes/light/4/position = Vector2(100, 20)
nodes/light/5/node = SubResource("VisualShaderNodeRemap_mrnv5")
nodes/light/5/position = Vector2(340, 20)
nodes/light/6/node = SubResource("VisualShaderNodeTexture_82v1i")
nodes/light/6/position = Vector2(580, 20)
nodes/light/connections = PackedInt32Array(4, 0, 5, 0, 2, 0, 4, 0, 3, 0, 4, 1, 5, 0, 6, 0, 6, 0, 0, 0)
